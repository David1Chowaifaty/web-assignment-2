{"version":3,"file":"ir-select.js","sourceRoot":"","sources":["../../../src/components/ir-select/ir-select.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACtF,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAS1B,MAAM,OAAO,QAAQ;;IAOX,aAAQ,GAAG,EAAE,EAAE,CAAC;IA4ChB,iBAAY,GAAG,CAAC,KAAU,EAAQ,EAAE;MAC1C,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;MAC3C,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;MAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC,CAAC;;;;sBAnDwD,EAAE;;EAM5D,iBAAiB;IACf,IAAI,CAAC,SAAS,EAAE,CAAC;EACnB,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1C,IAAI,CAAC,iBAAiB,EAAE,CAAC;EAC3B,CAAC;EAGD,gBAAgB,CAAC,QAAgB;IAC/B,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;MACtC,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;EACH,CAAC;EAEO,SAAS;IACf,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;MACjC,IAAI;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACzC;MAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,4BAA4B,KAAK,EAAE,CAAC,CAAC;OACpD;KACF;SAAM;MACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;KAC7B;EACH,CAAC;EAEO,iBAAiB;IACvB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;MACjD,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;MAClC,OAAO;KACR;IAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;MACvB,IAAI,EAAE,IAAI,CAAC,UAAU;KACtB,CAAC,CAAC;IAEH,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;EAC3D,CAAC;EAQD,MAAM;IACJ,OAAO,cAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAC,QAAQ,EAAC,KAAK,EAAE,WAAW,IAAI,CAAC,WAAW,EAAE,GAAW,CAAC;EACnG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n//import $ from 'jquery';\r\n//import 'select2';\r\nimport { DataFormat, GroupedDataFormat } from 'select2';\r\n\r\n@Component({\r\n  tag: 'ir-select',\r\n  shadow: false,\r\n})\r\nexport class IrSelect {\r\n  @Prop({ reflect: true }) data: string | DataFormat[] | GroupedDataFormat[];\r\n  @Prop({ reflect: true, mutable: true }) selectedItem: string;\r\n  @Prop({ reflect: true }) selectStyle: string;\r\n  @State() selectData: DataFormat[] | GroupedDataFormat[] = [];\r\n  @Event({ bubbles: true, composed: true }) onselectchange: EventEmitter<string>;\r\n\r\n  private selectId = v4();\r\n  private testElement: JQuery;\r\n\r\n  componentWillLoad(): void {\r\n    this.parseData();\r\n  }\r\n\r\n  componentDidLoad(): void {\r\n    this.testElement = $(`#${this.selectId}`);\r\n    this.initializeSelect2();\r\n  }\r\n\r\n  @Watch('data')\r\n  handleDataChange(newValue: string): void {\r\n    if (newValue && newValue.trim() !== '') {\r\n      this.parseData();\r\n    }\r\n  }\r\n\r\n  private parseData(): void {\r\n    if (typeof this.data === 'string') {\r\n      try {\r\n        this.selectData = JSON.parse(this.data);\r\n      } catch (error) {\r\n        console.error(`Error parsing JSON data: ${error}`);\r\n      }\r\n    } else {\r\n      this.selectData = this.data;\r\n    }\r\n  }\r\n\r\n  private initializeSelect2(): void {\r\n    if (!this.testElement || !this.testElement.length) {\r\n      console.warn('Element not found');\r\n      return;\r\n    }\r\n\r\n    this.testElement.select2({\r\n      data: this.selectData,\r\n    });\r\n\r\n    this.testElement.on('select2:select', this.handleSelect);\r\n  }\r\n\r\n  private handleSelect = (event: any): void => {\r\n    const selectedValue = event.params.data.id;\r\n    this.selectedItem = selectedValue;\r\n    this.onselectchange.emit(selectedValue);\r\n  };\r\n\r\n  render() {\r\n    return <select id={this.selectId} title=\"select\" class={`select2 ${this.selectStyle}`}></select>;\r\n  }\r\n}\r\n"]}