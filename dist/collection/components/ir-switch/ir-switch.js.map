{"version":3,"file":"ir-switch.js","sourceRoot":"","sources":["../../../src/components/ir-switch/ir-switch.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AACxE,OAAO,EAAE,EAAE,IAAI,MAAM,EAAE,MAAM,MAAM,CAAC;AACpC,mBAAmB;AACnB,0BAA0B;AAC1B,6BAA6B;AAC7B,sEAAsE;AACtE,+BAA+B;AAK/B,MAAM,OAAO,QAAQ;;IAuBnB,gBAAW,GAAW,MAAM,EAAE,CAAC;iBAtBW,KAAK;;;;;;;;;;;;;;;;;;;;EA0B/C,gBAAgB;IACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7C,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAC1B,CAAC;EAED,gBAAgB;IACd,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;MAC/C,kCAAkC;MAClC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;MAErD,2DAA2D;MAC3D,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;MAEnC,uCAAuC;MACvC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,8BAA8B,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QACnE,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC;KACJ;EACH,CAAC;EAED,sBAAsB,CAAC,KAAc;IACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACpC,CAAC;EAED,MAAM;IACJ,mCAAmC;IACnC,OAAO,aAAO,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,aAAa,EAAC,EAAE,EAAE,IAAI,CAAC,WAAW,GAAI,CAAC;EAC5E,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import 'jquery';\r\n// import $ from 'jquery';\r\n// import 'bootstrap-switch';\r\n// import 'bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.css';\r\n//import './jquery-extensions';\r\n\r\n@Component({\r\n  tag: 'ir-switch',\r\n})\r\nexport class IrSwitch {\r\n  @Prop({ mutable: true }) value: boolean = false;\r\n  @Prop() labelOn: string;\r\n  @Prop() labelOff: string;\r\n  @Prop() size?: string | 'mini' | 'small' | 'normal' | 'large'; // Add size prop\r\n  @Prop() switch_animate?: boolean; // Add animate prop\r\n  @Prop() disabled?: boolean; // Add disabled prop\r\n  @Prop() readonly?: boolean; // Add readonly prop\r\n  @Prop() indeterminate?: boolean; // Add indeterminate prop\r\n  @Prop() inverse?: boolean; // Add inverse prop\r\n  @Prop() radioAllOff?: boolean; // Add radioAllOff prop\r\n  @Prop() colorOn?: string; // Add onColor prop\r\n  @Prop() offColor?: string; // Add offColor prop\r\n  @Prop() classOn?: string; // Add onClass prop\r\n  @Prop() offClass?: string; // Add offClass prop\r\n  @Prop() labelText?: string; // Add labelText prop\r\n  @Prop() handleWidth?: string | 'auto'; // Add handleWidth prop\r\n  @Prop() labelWidth?: string | 'auto'; // Add labelWidth prop\r\n  @Prop() baseClass?: string; // Add baseClass prop\r\n  @Prop() wrapperClass?: string; // Add wrapperClass prop\r\n\r\n  @Event({ bubbles: true, composed: true }) valueChange: EventEmitter<boolean>;\r\n\r\n  componentId: string = uuidv4();\r\n\r\n  private testElement: JQuery;\r\n\r\n  componentDidLoad() {\r\n    this.testElement = $(`#${this.componentId}`);\r\n    this.initializeSwitch();\r\n  }\r\n\r\n  initializeSwitch() {\r\n    if (this.testElement && this.testElement.length) {\r\n      // Unbind previous event listeners\r\n      this.testElement.off('switchChange.bootstrapSwitch');\r\n\r\n      // Initialize Bootstrap Switch with updated state and props\r\n      this.testElement.bootstrapSwitch();\r\n\r\n      // Add event listener for switch change\r\n      this.testElement.on('switchChange.bootstrapSwitch', (event, state) => {\r\n        console.log('switchChange.bootstrapSwitch', event);\r\n        this.onSwitchChangeCallback(state);\r\n      });\r\n    }\r\n  }\r\n\r\n  onSwitchChangeCallback(state: boolean) {\r\n    this.value = state;\r\n    this.valueChange.emit(this.value);\r\n  }\r\n\r\n  render() {\r\n    //console.log('Props', this.value);\r\n    return <input type=\"checkbox\" name=\"my-checkbox\" id={this.componentId} />;\r\n  }\r\n}\r\n"]}