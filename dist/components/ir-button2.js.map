{"file":"ir-button2.js","mappings":";;MAKa,QAAQ;;;;;gBAC4C,QAAQ;uBACxB,EAAE;gBACT,EAAE;uBACK,EAAE;wBAC+E,SAAS;kBACrE,EAAE;;wBAEc,SAAS;;EAK7F,YAAY;IACV,IAAI,CAAC,gBAAgB,EAAE,CAAC;GACzB;EAED,YAAY;IACV,IAAI,CAAC,gBAAgB,EAAE,CAAC;GACzB;EAEO,gBAAgB;IACtB,QAAQ,IAAI,CAAC,YAAY;MACvB,KAAK,OAAO;QACV,OAAO,OAAO,IAAI,CAAC,YAAY,QAAQ,CAAC;MAC1C,KAAK,QAAQ;QACX,OAAO,OAAO,IAAI,CAAC,YAAY,SAAS,CAAC;MAC3C,KAAK,SAAS;QACZ,OAAO,eAAe,IAAI,CAAC,YAAY,EAAE,CAAC;MAC5C;QACE,OAAO,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;KACrC;GACF;EACD,WAAW;IACT,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;GAC3B;EACD,MAAM;IACJ,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;MACtB,MAAM,GAAG,cAAc,IAAI,CAAC,MAAM,EAAE,CAAC;KACtC;IACD,QACE,cAAQ,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,UAAU,GAAG,EAAE,GAAG,IACjK,IAAI,CAAC,IAAI,KAAK,EAAE,KACf,EAAC,QAAQ,QACP,SAAG,KAAK,EAAE,IAAI,CAAC,IAAI,GAAM,WAChB,CACZ,EACA,IAAI,CAAC,WAAW,CACV,EACT;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ir-button/ir-button.tsx"],"sourcesContent":["import { Component, Event, EventEmitter, Fragment, Prop, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n})\r\nexport class IrButton {\r\n  @Prop({ reflect: true }) type: 'button' | 'submit' | 'reset' = 'button';\r\n  @Prop({ reflect: true }) buttonTitle: string = '';\r\n  @Prop({ reflect: true }) icon: string = '';\r\n  @Prop({ reflect: true }) buttonStyle: string = '';\r\n  @Prop({ reflect: true }) colorVariant: 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' | 'light' | 'dark' = 'primary';\r\n  @Prop({ reflect: true }) shadow: '' | '1' | '2' | '3' | '4' | '5' = '';\r\n  @Prop({ reflect: true }) glow: boolean;\r\n  @Prop({ reflect: true }) shapeVariant: 'default' | 'round' | 'square' | 'outline' = 'default';\r\n\r\n  @Event({ bubbles: true, composed: true }) buttonClicked: EventEmitter<any>;\r\n\r\n  @Watch('shapeVariant')\r\n  shapeChanged() {\r\n    this.applyButtonStyle();\r\n  }\r\n  @Watch('colorVariant')\r\n  colorChanged() {\r\n    this.applyButtonStyle();\r\n  }\r\n\r\n  private applyButtonStyle() {\r\n    switch (this.shapeVariant) {\r\n      case 'round':\r\n        return `btn-${this.colorVariant} round`;\r\n      case 'square':\r\n        return `btn-${this.colorVariant} square`;\r\n      case 'outline':\r\n        return `btn-outline-${this.colorVariant}`;\r\n      default:\r\n        return `btn-${this.colorVariant}`;\r\n    }\r\n  }\r\n  handleClick() {\r\n    this.buttonClicked.emit();\r\n  }\r\n  render() {\r\n    let shadow = '';\r\n    if (this.shadow !== '') {\r\n      shadow = `box-shadow-${this.shadow}`;\r\n    }\r\n    return (\r\n      <button type={this.type} onClick={this.handleClick.bind(this)} class={`btn ${this.applyButtonStyle()} ${this.buttonStyle} ${shadow} ${this.glow ? 'btn-glow' : ''} `}>\r\n        {this.icon !== '' && (\r\n          <Fragment>\r\n            <i class={this.icon}></i>&nbsp;\r\n          </Fragment>\r\n        )}\r\n        {this.buttonTitle}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n"],"version":3}