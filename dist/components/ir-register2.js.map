{"file":"ir-register2.js","mappings":"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","names":[],"sources":["src/components/ir-register/ir-register.tsx"],"sourcesContent":["import { Component, Event, EventEmitter, State, h } from '@stencil/core';\r\nimport { IRegister } from '../../model/Register';\r\n\r\n@Component({\r\n  tag: 'ir-register',\r\n})\r\nexport class IrRegister {\r\n  @State() username: string;\r\n  @State() password: string;\r\n  @State() email: string;\r\n  @Event({ composed: true, bubbles: true }) registerClicked: EventEmitter<IRegister>;\r\n  @Event({ composed: true, bubbles: true }) linkLoginClicked: EventEmitter<any>;\r\n\r\n  usernameRef: HTMLElement;\r\n  passwordRef: HTMLElement;\r\n  emailRef: HTMLElement;\r\n  formRef: HTMLFormElement;\r\n\r\n  componentDidLoad() {\r\n    this.addEventListeners();\r\n  }\r\n  handleClick() {\r\n    this.linkLoginClicked.emit();\r\n  }\r\n\r\n  addEventListeners() {\r\n    this.usernameRef.addEventListener('ontextchange', this.handleUsernameChange.bind(this));\r\n    this.passwordRef.addEventListener('ontextchange', this.handlePasswordChange.bind(this));\r\n    this.emailRef.addEventListener('ontextchange', this.handleEmailChange.bind(this));\r\n  }\r\n\r\n  handleUsernameChange(e: CustomEvent) {\r\n    this.username = e.detail;\r\n  }\r\n\r\n  handlePasswordChange(e: CustomEvent) {\r\n    this.password = e.detail;\r\n  }\r\n\r\n  handleEmailChange(e: CustomEvent) {\r\n    this.email = e.detail;\r\n  }\r\n\r\n  handleFormSubmit(e: Event) {\r\n    e.preventDefault();\r\n    this.emitRegisterData();\r\n  }\r\n\r\n  emitRegisterData() {\r\n    this.registerClicked.emit({\r\n      email: this.email,\r\n      password: this.password,\r\n      username: this.username,\r\n    });\r\n    this.formRef.reset();\r\n  }\r\n  render() {\r\n    return (\r\n      <section class=\"card\">\r\n        <ir-card-header class=\"card-header border-0\" image-source=\"../../../app-assets/images/logo/logo-dark.png\" image-alt-text=\"branding logo\" header-title=\"Create Account\" />\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body\">\r\n            <form ref={el => (this.formRef = el)} class=\"form-horizontal form-simple\" novalidate onSubmit={this.handleFormSubmit.bind(this)}>\r\n              <ir-input ref={el => (this.usernameRef = el)} type=\"text\" icon=\"la la-user\" placeholder=\"User Name\" container-style=\"mb-1\" />\r\n              <ir-input ref={el => (this.emailRef = el)} type=\"text\" icon=\"la la-envelope\" placeholder=\"Your Email Address\" required container-style=\"mb-1\" />\r\n              <ir-input ref={el => (this.passwordRef = el)} type=\"password\" icon=\"la la-key\" placeholder=\"Enter Password\" required />\r\n\r\n              <ir-button class=\"btn-block\" type=\"submit\" icon=\"ft-unlock\" button-style=\"btn-block\" button-title=\" Register\" color-variant=\"info\" />\r\n            </form>\r\n          </div>\r\n          <p class=\"text-center\">\r\n            Already have an account ? <ir-link onClick={this.handleClick.bind(this)} link-title=\"Log in\" link-destination=\"#\" />\r\n          </p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"],"version":3}