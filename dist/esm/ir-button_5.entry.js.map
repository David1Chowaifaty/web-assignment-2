{"file":"ir-button.ir-checkbox.ir-input.ir-link.ir-login.entry.js","mappings":"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","names":[],"sources":["src/components/ir-button/ir-button.tsx","src/components/ir-checkbox/ir-checkbox.css?tag=ir-checkbox","src/components/ir-checkbox/ir-checkbox.tsx","src/components/ir-input/ir-input.css?tag=ir-input","src/components/ir-input/ir-input.tsx","src/components/ir-link/ir-link.css?tag=ir-link&encapsulation=shadow","src/components/ir-link/ir-link.tsx","src/components/ir-login/ir-login.tsx"],"sourcesContent":["import { Component, Event, EventEmitter, Fragment, Prop, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n})\r\nexport class IrButton {\r\n  @Prop({ reflect: true }) type: 'button' | 'submit' | 'reset' = 'button';\r\n  @Prop({ reflect: true }) buttonTitle: string = '';\r\n  @Prop({ reflect: true }) icon: string = '';\r\n  @Prop({ reflect: true }) buttonStyle: string = '';\r\n  @Prop({ reflect: true }) colorVariant: 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' | 'light' | 'dark' = 'primary';\r\n  @Prop({ reflect: true }) shadow: '' | '1' | '2' | '3' | '4' | '5' = '';\r\n  @Prop({ reflect: true }) glow: boolean;\r\n  @Prop({ reflect: true }) shapeVariant: 'default' | 'round' | 'square' | 'outline' = 'default';\r\n\r\n  @Event({ bubbles: true, composed: true }) buttonClicked: EventEmitter<any>;\r\n\r\n  @Watch('shapeVariant')\r\n  shapeChanged() {\r\n    this.applyButtonStyle();\r\n  }\r\n  @Watch('colorVariant')\r\n  colorChanged() {\r\n    this.applyButtonStyle();\r\n  }\r\n\r\n  private applyButtonStyle() {\r\n    switch (this.shapeVariant) {\r\n      case 'round':\r\n        return `btn-${this.colorVariant} round`;\r\n      case 'square':\r\n        return `btn-${this.colorVariant} square`;\r\n      case 'outline':\r\n        return `btn-outline-${this.colorVariant}`;\r\n      default:\r\n        return `btn-${this.colorVariant}`;\r\n    }\r\n  }\r\n  handleClick() {\r\n    this.buttonClicked.emit();\r\n  }\r\n  render() {\r\n    let shadow = '';\r\n    if (this.shadow !== '') {\r\n      shadow = `box-shadow-${this.shadow}`;\r\n    }\r\n    return (\r\n      <button type={this.type} onClick={this.handleClick.bind(this)} class={`btn ${this.applyButtonStyle()} ${this.buttonStyle} ${shadow} ${this.glow ? 'btn-glow' : ''} `}>\r\n        {this.icon !== '' && (\r\n          <Fragment>\r\n            <i class={this.icon}></i>&nbsp;\r\n          </Fragment>\r\n        )}\r\n        {this.buttonTitle}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-checkbox',\r\n  styleUrl: 'ir-checkbox.css',\r\n  shadow: false,\r\n})\r\nexport class IrCheckbox {\r\n  @Prop({ reflect: true }) label: string = '';\r\n  @Prop({ reflect: true }) inputId: string = '';\r\n  @Prop({ reflect: true }) checkboxStyle: string;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true }) labelStyle: string;\r\n  @Prop({ reflect: true }) containerStyle: string;\r\n  @Prop({ reflect: true, mutable: true }) checked: boolean;\r\n  @Event({ bubbles: true, composed: true }) oncheckchange: EventEmitter<boolean>;\r\n\r\n  @State() labelShown: boolean = false;\r\n  componentWillLoad() {\r\n    this.setLabelShown();\r\n  }\r\n  @Watch('label')\r\n  onLabelChange() {\r\n    this.setLabelShown();\r\n  }\r\n  setLabelShown() {\r\n    if (this.label !== '' && this.inputId !== '') {\r\n      this.labelShown = true;\r\n    } else {\r\n      this.labelShown = false;\r\n    }\r\n  }\r\n  handleChange(event: Event) {\r\n    const isChecked = (event.target as HTMLInputElement).checked;\r\n    this.checked = isChecked;\r\n    this.oncheckchange.emit(isChecked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input type=\"checkbox\" disabled={this.disabled} onChange={this.handleChange.bind(this)} checked={this.checked} class={this.checkboxStyle} id={this.inputId} />\r\n        {this.labelShown && (\r\n          <label class={this.labelStyle} htmlFor={this.inputId}>\r\n            {this.label}\r\n          </label>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-input',\r\n  styleUrl: 'ir-input.css',\r\n  shadow: false,\r\n})\r\nexport class IrInput {\r\n  @Prop({ reflect: true }) label: string = '';\r\n  @Prop({ reflect: true }) icon: string;\r\n  @Prop({ reflect: true }) inputId: string;\r\n  @Prop({ reflect: true }) placeholder: string;\r\n  @Prop({ reflect: true }) value: string;\r\n  @Prop({ reflect: true }) type: string;\r\n  @Prop({ reflect: true }) containerStyle: string;\r\n  @Prop({ reflect: true }) required: boolean;\r\n  @Event({ bubbles: true, composed: true }) ontextchange: EventEmitter<string>;\r\n  @State() visible: boolean = false;\r\n\r\n  handleChange(event) {\r\n    this.visible = true;\r\n    this.value = event.target.value;\r\n    this.ontextchange.emit(this.value);\r\n  }\r\n  applyContainerStyle() {\r\n    const baseClass = this.label !== '' ? 'input-group input-group-sm' : 'form-group position-relative has-icon-left';\r\n    return `${baseClass} ${this.containerStyle}`;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <fieldset class={this.applyContainerStyle()}>\r\n          {this.label && (\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id={this.inputId}>\r\n                {this.label}\r\n              </span>\r\n            </div>\r\n          )}\r\n          <input\r\n            type={this.type}\r\n            placeholder={this.placeholder}\r\n            class=\"form-control\"\r\n            value={this.value}\r\n            onInput={event => this.handleChange(event)}\r\n            aria-label=\"Small\"\r\n            aria-describedby=\"inputGroup-sizing-sm\"\r\n            required={this.required}\r\n          />\r\n          {this.icon && (\r\n            <div class=\"form-control-position\">\r\n              <i class={this.icon}> </i>\r\n            </div>\r\n          )}\r\n        </fieldset>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n    display: block;\r\n  }","import { Component, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-link',\r\n  styleUrl: 'ir-link.css',\r\n  shadow: true,\r\n})\r\nexport class IrLink {\r\n\r\n@Prop({reflect:true}) linkTitle:string;\r\n@Prop({reflect:true}) linkDestination:string;\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        \r\n          <a href={this.linkDestination} class=\"card-link\">\r\n           {this.linkTitle}\r\n          </a>\r\n        \r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, State, h } from '@stencil/core';\r\nimport { ILogin } from '../../model/Login';\r\n\r\n@Component({\r\n  tag: 'ir-login',\r\n})\r\nexport class IrLogin {\r\n  handleClick() {}\r\n\r\n  @State() username: string;\r\n  @State() password: string;\r\n  @State() isChecked: boolean = false;\r\n\r\n  @Event({ composed: true, bubbles: true }) loginClicked: EventEmitter<ILogin>;\r\n\r\n  usernameRef: HTMLElement;\r\n  passwordRef: HTMLElement;\r\n  checkboxRef: HTMLElement;\r\n\r\n  componentDidLoad() {\r\n    this.addEventListeners();\r\n  }\r\n\r\n  addEventListeners() {\r\n    this.usernameRef.addEventListener('ontextchange', this.handleUsernameChange.bind(this));\r\n    this.passwordRef.addEventListener('ontextchange', this.handlePasswordChange.bind(this));\r\n    this.checkboxRef.addEventListener('oncheckchange', this.handleCheckboxChange.bind(this));\r\n  }\r\n\r\n  handleUsernameChange(e: CustomEvent) {\r\n    this.username = e.detail;\r\n  }\r\n\r\n  handlePasswordChange(e: CustomEvent) {\r\n    this.password = e.detail;\r\n  }\r\n\r\n  handleCheckboxChange(e: CustomEvent) {\r\n    this.isChecked = e.detail;\r\n  }\r\n\r\n  handleFormSubmit(e: Event) {\r\n    e.preventDefault();\r\n    this.emitLoginData();\r\n  }\r\n\r\n  emitLoginData() {\r\n    this.loginClicked.emit({\r\n      isChecked: this.isChecked,\r\n      password: this.password,\r\n      username: this.username,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"app-content container center-layout mt-2\">\r\n        <div class=\"content-overlay\"></div>\r\n        <div class=\"content-wrapper\">\r\n          <div class=\"content-body\">\r\n            <section class=\"row flexbox-container\">\r\n              <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n                <div class=\"col-lg-4 col-md-8 col-10 box-shadow-2 p-0\">\r\n                  <div class=\"card border-grey border-lighten-3 m-0\">\r\n                    <div class=\"card-header border-0\">\r\n                      <div class=\"card-title text-center\">\r\n                        <img src=\"../../../app-assets/images/logo/logo-dark.png\" alt=\"branding logo\" />\r\n                      </div>\r\n                      <h6 class=\"card-subtitle line-on-side text-muted text-center font-small-3 pt-2\">\r\n                        <span>Login with Modern</span>\r\n                      </h6>\r\n                    </div>\r\n\r\n                    <div class=\"card-content\">\r\n                      <div class=\"card-body\">\r\n                        <form class=\"form-horizontal form-simple\" novalidate onSubmit={this.handleFormSubmit.bind(this)}>\r\n                          <ir-input ref={el => (this.usernameRef = el)} type=\"text\" icon=\"la la-user\" placeholder=\"Your Username\" required container-style=\"mb-0\" />\r\n                          <ir-input ref={el => (this.passwordRef = el)} type=\"password\" icon=\"la la-key\" placeholder=\"Enter Password\" required />\r\n                          <div class=\"form-group row\">\r\n                            <ir-checkbox\r\n                              ref={el => (this.checkboxRef = el)}\r\n                              class=\"col-sm-6 col-12 text-center text-sm-left\"\r\n                              label=\" Remember Me\"\r\n                              input-id=\"remember-me\"\r\n                              checkbox-style=\"chk-remember\"\r\n                            />\r\n                            <div class=\"col-sm-6 col-12 text-center text-sm-right\">\r\n                              <ir-link link-title=\"Forgot Password?\" link-destination=\"#\" />\r\n                            </div>\r\n                          </div>\r\n                          <ir-button class=\"btn-block\" type=\"submit\" icon=\"ft-unlock\" button-style=\"btn-block\" button-title=\" Login\" color-variant=\"info\" />\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"card-footer\">\r\n                      <div class=\"\">\r\n                        <p class=\"float-xl-left text-center m-0\">\r\n                          <ir-link link-title=\" Recover password\" link-destination=\"#\" />\r\n                        </p>\r\n                        <p class=\"float-xl-right text-center m-0\">\r\n                          New to Moden Admin? <ir-link onClick={this.handleClick.bind(this)} link-title=\"Sign Up\" link-destination=\"#\" />\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}