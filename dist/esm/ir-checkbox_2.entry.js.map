{"file":"ir-checkbox.ir-select.entry.js","mappings":"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","names":[],"sources":["src/components/ir-checkbox/ir-checkbox.css?tag=ir-checkbox","src/components/ir-checkbox/ir-checkbox.tsx","src/components/ir-select/ir-select.css?tag=ir-select","src/components/ir-select/ir-select.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-checkbox',\r\n  styleUrl: 'ir-checkbox.css',\r\n  shadow: false,\r\n})\r\nexport class IrCheckbox {\r\n  @Prop({ reflect: true }) label: string = '';\r\n  @Prop({ reflect: true }) inputId: string = '';\r\n  @Prop({ reflect: true }) checkboxStyle: string;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true }) labelStyle: string;\r\n  @Prop({ reflect: true }) containerStyle: string;\r\n  @Prop({ reflect: true, mutable: true }) checked: boolean;\r\n  @Event({ bubbles: true, composed: true }) oncheckchange: EventEmitter<boolean>;\r\n\r\n  @State() labelShown: boolean = false;\r\n  componentWillLoad() {\r\n    this.setLabelShown();\r\n  }\r\n  @Watch('label')\r\n  onLabelChange() {\r\n    this.setLabelShown();\r\n  }\r\n  setLabelShown() {\r\n    if (this.label !== '' && this.inputId !== '') {\r\n      this.labelShown = true;\r\n    } else {\r\n      this.labelShown = false;\r\n    }\r\n  }\r\n  handleChange(event: Event) {\r\n    const isChecked = (event.target as HTMLInputElement).checked;\r\n    this.checked = isChecked;\r\n    this.oncheckchange.emit(isChecked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input type=\"checkbox\" disabled={this.disabled} onChange={this.handleChange.bind(this)} checked={this.checked} class={this.checkboxStyle} id={this.inputId} />\r\n        {this.labelShown && (\r\n          <label class={this.labelStyle} htmlFor={this.inputId}>\r\n            {this.label}\r\n          </label>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-select',\r\n  styleUrl: 'ir-select.css',\r\n  shadow: false,\r\n})\r\nexport class IrSelect {\r\n  @Prop({ reflect: true }) data: string;\r\n  @Prop({ reflect: true }) selectName: string;\r\n  @Prop({ reflect: true }) selectStyle: string;\r\n  @Prop({ reflect: true }) selectTitle: string;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true, mutable: true }) selectedItem: string;\r\n  @State() selectData: SelectTypes[];\r\n  @Event({ bubbles: true, composed: true }) onselectchange: EventEmitter<string>;\r\n  @Element() el: HTMLElement;\r\n  selectRef: HTMLSelectElement;\r\n  @State() parentAttributes: { name: string; value: string }[] = [];\r\n\r\n  componentWillLoad() {\r\n    this.setSelectData();\r\n    Array.from(this.el.attributes).forEach(attribute => {\r\n      if (attribute.name !== 'data') {\r\n        this.parentAttributes.push({ name: attribute.name, value: attribute.value });\r\n        this.el.removeAttribute(attribute.name);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.parentAttributes.forEach(attribute => {\r\n      this.selectRef.setAttribute(attribute.name, attribute.value);\r\n    });\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    this.parentAttributes.forEach(attribute => {\r\n      if (attribute.name === name) {\r\n        if (oldValue != newValue) {\r\n          attribute.value = newValue;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['class', 'data-select2-id', 'tabindex', 'aria-hidden'];\r\n  }\r\n\r\n  @Watch('data')\r\n  handleDataChange(newValue: string, _oldValue: string) {\r\n    if (newValue !== _oldValue && newValue !== '') {\r\n      this.setSelectData();\r\n    }\r\n  }\r\n\r\n  setSelectData() {\r\n    try {\r\n      if (this.data && this.data.trim() !== '') {\r\n        this.selectData = JSON.parse(this.data) as SelectTypes[];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error parsing JSON data:', error);\r\n    }\r\n  }\r\n\r\n  onSelectChange(e: Event) {\r\n    const selectedValue = (e.target as HTMLSelectElement).value;\r\n    this.onselectchange.emit(selectedValue);\r\n    this.selectedItem = selectedValue;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <select ref={el => (this.selectRef = el)} disabled={this.disabled} onChange={this.onSelectChange.bind(this)} title={this.selectTitle}>\r\n          {this.selectData.map(d => (\r\n            <optgroup label={d.optgrouplabel}>\r\n              {d.options.map(option => (\r\n                <option value={option.value}>{option.title}</option>\r\n              ))}\r\n            </optgroup>\r\n          ))}\r\n        </select>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}