{"version":3,"names":["irSidebarCss","IrSidebar","toggleSidebar","this","irSidebarToggle","emit","open","render","className","h","class","onClick","side","icon"],"sources":["src/components/ir-sidebar/ir-sidebar.css?tag=ir-sidebar","src/components/ir-sidebar/ir-sidebar.tsx"],"sourcesContent":[".backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  cursor: pointer;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 99;\n  transition: all 0.5s;\n  opacity: 0;\n  pointer-events: none;\n  transition: all 0.5s;\n}\n.backdrop.active {\n  opacity: 1;\n  pointer-events: all;\n}\n\n.sidebar-right {\n  position: fixed;\n  top: 0;\n  right: -100%;\n  bottom: 0;\n  width: var(--sidebar-width, 30rem);\n  max-width: 100%;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.5s;\n  z-index: 200;\n  overflow-y: hidden;\n  color: var(--sidebar-color, #000);\n  background-color: var(--sidebar-backgound, #fff);\n  padding: 0.5rem;\n}\n.sidebar-right.active {\n  right: 0;\n  overflow-y: scroll;\n}\n\n.sidebar-left {\n  position: fixed;\n  top: 0;\n  left: -100%;\n  bottom: 0;\n  width: var(--sidebar-width, 30rem);\n  max-width: 100%;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.5s;\n  z-index: 200;\n  overflow-y: hidden;\n  color: var(--sidebar-color, #000);\n  background: var(--sidebar-backgound, #fff);\n  padding: 0.5rem;\n}\n\n.sidebar-left.active {\n  left: 0;\n  overflow-y: scroll;\n}\n.close {\n  position: absolute;\n  top: 0.5rem;\n  right: 1rem;\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n","import { Component, Prop, h, Method, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ir-sidebar',\n  styleUrl: 'ir-sidebar.css',\n})\nexport class IrSidebar {\n  @Prop() name: string;\n  @Prop() side: 'right' | 'left' = 'right';\n\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  @Event({ bubbles: true, composed: true }) irSidebarToggle: EventEmitter;\n\n  @Method()\n  async toggleSidebar() {\n    this.irSidebarToggle.emit(this.open);\n  }\n\n  render() {\n    let className = '';\n    if (this.open) {\n      className = 'active';\n    } else {\n      className = '';\n    }\n\n    return [\n      <div\n        class={`backdrop ${className}`}\n        onClick={() => {\n          this.toggleSidebar();\n        }}\n      ></div>,\n      <div class={`sidebar-${this.side} ${className}`}>\n        <a\n          class=\"close\"\n          onClick={() => {\n            this.toggleSidebar();\n          }}\n        >\n          <ir-icon icon=\"ft-x\"></ir-icon>\n        </a>\n        <slot />\n      </div>,\n    ];\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAe,89B,MCMRC,EAAS,M,wGAEa,Q,UAEuB,K,CAKxD,mBAAMC,GACJC,KAAKC,gBAAgBC,KAAKF,KAAKG,K,CAGjC,MAAAC,GACE,IAAIC,EAAY,GAChB,GAAIL,KAAKG,KAAM,CACbE,EAAY,Q,KACP,CACLA,EAAY,E,CAGd,MAAO,CACLC,EAAA,OACEC,MAAO,YAAYF,IACnBG,QAAS,KACPR,KAAKD,eAAe,IAGxBO,EAAA,OAAKC,MAAO,WAAWP,KAAKS,QAAQJ,KAClCC,EAAA,KACEC,MAAM,QACNC,QAAS,KACPR,KAAKD,eAAe,GAGtBO,EAAA,WAASI,KAAK,UAEhBJ,EAAA,c"}