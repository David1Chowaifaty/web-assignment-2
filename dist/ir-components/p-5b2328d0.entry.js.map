{"version":3,"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","random","IrSelect","this","selectId","handleSelect","event","selectedValue","params","data","id","onselectchange","emit","selectedItem","componentWillLoad","parseData","componentDidLoad","testElement","$","initializeSelect2","handleDataChange","newValue","trim","selectData","JSON","parse","error","console","length","warn","select2","on","render","h","class","title","IrSwitch","componentId","uuidv4","initializeSwitch","off","bootstrapSwitch","state","log","onSwitchChangeCallback","value","valueChange","type","name"],"sources":["node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","src/components/ir-select/ir-select.tsx","src/components/ir-switch/ir-switch.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n//import $ from 'jquery';\r\n//import 'select2';\r\nimport { DataFormat, GroupedDataFormat } from 'select2';\r\n\r\n@Component({\r\n  tag: 'ir-select',\r\n  shadow: false,\r\n})\r\nexport class IrSelect {\r\n  @Prop({ reflect: true }) data: string | DataFormat[] | GroupedDataFormat[];\r\n  @Prop({ reflect: true, mutable: true }) selectedItem: string;\r\n  @State() selectData: DataFormat[] | GroupedDataFormat[] = [];\r\n  @Event({ bubbles: true, composed: true }) onselectchange: EventEmitter<string>;\r\n\r\n  private selectId = v4();\r\n  private testElement: JQuery;\r\n\r\n  componentWillLoad(): void {\r\n    this.parseData();\r\n  }\r\n\r\n  componentDidLoad(): void {\r\n    this.testElement = $(`#${this.selectId}`);\r\n    this.initializeSelect2();\r\n  }\r\n\r\n  @Watch('data')\r\n  handleDataChange(newValue: string): void {\r\n    if (newValue && newValue.trim() !== '') {\r\n      this.parseData();\r\n    }\r\n  }\r\n\r\n  private parseData(): void {\r\n    if (typeof this.data === 'string') {\r\n      try {\r\n        this.selectData = JSON.parse(this.data);\r\n      } catch (error) {\r\n        console.error(`Error parsing JSON data: ${error}`);\r\n      }\r\n    } else {\r\n      this.selectData = this.data;\r\n    }\r\n  }\r\n\r\n  private initializeSelect2(): void {\r\n    if (!this.testElement || !this.testElement.length) {\r\n      console.warn('Element not found');\r\n      return;\r\n    }\r\n\r\n    this.testElement.select2({\r\n      data: this.selectData,\r\n    });\r\n\r\n    this.testElement.on('select2:select', this.handleSelect);\r\n  }\r\n\r\n  private handleSelect = (event: any): void => {\r\n    const selectedValue = event.params.data.id;\r\n    this.onselectchange.emit(selectedValue);\r\n    this.selectedItem = selectedValue;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class={'form-group'}>\r\n        <div class=\"input-group row m-0\">\r\n          <select id={this.selectId} title=\"select\" class=\"select2 form-control\"></select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\nimport { v4 as uuidv4 } from 'uuid';\n// import 'jquery';\n// import $ from 'jquery';\n// import 'bootstrap-switch';\n// import 'bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.css';\n//import './jquery-extensions';\n\n@Component({\n  tag: 'ir-switch',\n})\nexport class IrSwitch {\n  @Prop({ mutable: true }) value: boolean = false;\n  @Prop() labelOn: string;\n  @Prop() labelOff: string;\n  @Prop() size?: string | 'mini' | 'small' | 'normal' | 'large'; // Add size prop\n  @Prop() switch_animate?: boolean; // Add animate prop\n  @Prop() disabled?: boolean; // Add disabled prop\n  @Prop() readonly?: boolean; // Add readonly prop\n  @Prop() indeterminate?: boolean; // Add indeterminate prop\n  @Prop() inverse?: boolean; // Add inverse prop\n  @Prop() radioAllOff?: boolean; // Add radioAllOff prop\n  @Prop() colorOn?: string; // Add onColor prop\n  @Prop() offColor?: string; // Add offColor prop\n  @Prop() classOn?: string; // Add onClass prop\n  @Prop() offClass?: string; // Add offClass prop\n  @Prop() labelText?: string; // Add labelText prop\n  @Prop() handleWidth?: string | 'auto'; // Add handleWidth prop\n  @Prop() labelWidth?: string | 'auto'; // Add labelWidth prop\n  @Prop() baseClass?: string; // Add baseClass prop\n  @Prop() wrapperClass?: string; // Add wrapperClass prop\n\n  @Event({ bubbles: true, composed: true }) valueChange: EventEmitter<boolean>;\n\n  componentId: string = uuidv4();\n\n  private testElement: JQuery;\n\n  componentDidLoad() {\n    this.testElement = $(`#${this.componentId}`);\n    this.initializeSwitch();\n  }\n\n  initializeSwitch() {\n    if (this.testElement && this.testElement.length) {\n      // Unbind previous event listeners\n      this.testElement.off('switchChange.bootstrapSwitch');\n\n      // Initialize Bootstrap Switch with updated state and props\n      this.testElement.bootstrapSwitch();\n\n      // Add event listener for switch change\n      this.testElement.on('switchChange.bootstrapSwitch', (event, state) => {\n        console.log('switchChange.bootstrapSwitch', event);\n        this.onSwitchChangeCallback(state);\n      });\n    }\n  }\n\n  onSwitchChangeCallback(state: boolean) {\n    this.value = state;\n    this.valueChange.emit(this.value);\n  }\n\n  render() {\n    //console.log('Props', this.value);\n    return <input type=\"checkbox\" name=\"my-checkbox\" id={this.componentId} />;\n  }\n}\n"],"mappings":"kDAGA,IAAIA,EACJ,MAAMC,EAAQ,IAAIC,WAAW,IACd,SAASC,IAEtB,IAAKH,EAAiB,CAEpBA,SAAyBI,SAAW,aAAeA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,QAEzG,IAAKJ,EAAiB,CACpB,MAAM,IAAIM,MAAM,2GACtB,CACA,CAEE,OAAON,EAAgBC,EACzB,CCXA,MAAMM,EAAY,GAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI,MAAOA,EAAG,CAC5BD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,MAAM,GAChD,CAEO,SAASC,EAAgBC,EAAKC,EAAS,GAG5C,OAAOP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,IAChf,CChBA,MAAMC,SAAoBX,SAAW,aAAeA,OAAOW,YAAcX,OAAOW,WAAWV,KAAKD,QAChG,MAAAY,EAAe,CACbD,cCEF,SAASE,EAAGC,EAASC,EAAKL,GACxB,GAAIE,EAAOD,aAAeI,IAAQD,EAAS,CACzC,OAAOF,EAAOD,YAClB,CAEEG,EAAUA,GAAW,GACrB,MAAME,EAAOF,EAAQG,SAAWH,EAAQf,KAAOA,KAE/CiB,EAAK,GAAKA,EAAK,GAAK,GAAO,GAC3BA,EAAK,GAAKA,EAAK,GAAK,GAAO,IAE3B,GAAID,EAAK,CACPL,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3BW,EAAIL,EAASN,GAAKY,EAAKZ,EAC7B,CAEI,OAAOW,CACX,CAEE,OAAOP,EAAgBQ,EACzB,C,MChBaE,EAAQ,M,wEAMXC,KAAAC,SAAWP,IA4CXM,KAAAE,aAAgBC,IACtB,MAAMC,EAAgBD,EAAME,OAAOC,KAAKC,GACxCP,KAAKQ,eAAeC,KAAKL,GACzBJ,KAAKU,aAAeN,CAAa,E,gEAlDuB,E,CAM1D,iBAAAO,GACEX,KAAKY,W,CAGP,gBAAAC,GACEb,KAAKc,YAAcC,EAAE,IAAIf,KAAKC,YAC9BD,KAAKgB,mB,CAIP,gBAAAC,CAAiBC,GACf,GAAIA,GAAYA,EAASC,SAAW,GAAI,CACtCnB,KAAKY,W,EAID,SAAAA,GACN,UAAWZ,KAAKM,OAAS,SAAU,CACjC,IACEN,KAAKoB,WAAaC,KAAKC,MAAMtB,KAAKM,K,CAClC,MAAOiB,GACPC,QAAQD,MAAM,4BAA4BA,I,MAEvC,CACLvB,KAAKoB,WAAapB,KAAKM,I,EAInB,iBAAAU,GACN,IAAKhB,KAAKc,cAAgBd,KAAKc,YAAYW,OAAQ,CACjDD,QAAQE,KAAK,qBACb,M,CAGF1B,KAAKc,YAAYa,QAAQ,CACvBrB,KAAMN,KAAKoB,aAGbpB,KAAKc,YAAYc,GAAG,iBAAkB5B,KAAKE,a,CAS7C,MAAA2B,GACE,OACEC,EAAA,OAAKC,MAAO,cACVD,EAAA,OAAKC,MAAM,uBACTD,EAAA,UAAQvB,GAAIP,KAAKC,SAAU+B,MAAM,SAASD,MAAM,0B,iEC3D7CE,EAAQ,M,kEAuBnBjC,KAAAkC,YAAsBC,I,WAtBoB,M,icA0B1C,gBAAAtB,GACEb,KAAKc,YAAcC,EAAE,IAAIf,KAAKkC,eAC9BlC,KAAKoC,kB,CAGP,gBAAAA,GACE,GAAIpC,KAAKc,aAAed,KAAKc,YAAYW,OAAQ,CAE/CzB,KAAKc,YAAYuB,IAAI,gCAGrBrC,KAAKc,YAAYwB,kBAGjBtC,KAAKc,YAAYc,GAAG,gCAAgC,CAACzB,EAAOoC,KAC1Df,QAAQgB,IAAI,+BAAgCrC,GAC5CH,KAAKyC,uBAAuBF,EAAM,G,EAKxC,sBAAAE,CAAuBF,GACrBvC,KAAK0C,MAAQH,EACbvC,KAAK2C,YAAYlC,KAAKT,KAAK0C,M,CAG7B,MAAAb,GAEE,OAAOC,EAAA,SAAOc,KAAK,WAAWC,KAAK,cAActC,GAAIP,KAAKkC,a"}