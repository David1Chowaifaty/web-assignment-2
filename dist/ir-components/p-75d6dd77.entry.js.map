{"version":3,"names":["IrSelect","this","selectId","v4","handleSelect","event","selectedValue","params","data","id","selectedItem","onselectchange","emit","componentWillLoad","parseData","componentDidLoad","testElement","$","initializeSelect2","handleDataChange","newValue","trim","selectData","JSON","parse","error","console","length","warn","select2","on","render","h","title","class","selectStyle"],"sources":["src/components/ir-select/ir-select.tsx"],"sourcesContent":["import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n//import $ from 'jquery';\r\n//import 'select2';\r\nimport { DataFormat, GroupedDataFormat } from 'select2';\r\n\r\n@Component({\r\n  tag: 'ir-select',\r\n  shadow: false,\r\n})\r\nexport class IrSelect {\r\n  @Prop({ reflect: true }) data: string | DataFormat[] | GroupedDataFormat[];\r\n  @Prop({ reflect: true, mutable: true }) selectedItem: string;\r\n  @Prop({ reflect: true }) selectStyle: string;\r\n  @State() selectData: DataFormat[] | GroupedDataFormat[] = [];\r\n  @Event({ bubbles: true, composed: true }) onselectchange: EventEmitter<string>;\r\n\r\n  private selectId = v4();\r\n  private testElement: JQuery;\r\n\r\n  componentWillLoad(): void {\r\n    this.parseData();\r\n  }\r\n\r\n  componentDidLoad(): void {\r\n    this.testElement = $(`#${this.selectId}`);\r\n    this.initializeSelect2();\r\n  }\r\n\r\n  @Watch('data')\r\n  handleDataChange(newValue: string): void {\r\n    if (newValue && newValue.trim() !== '') {\r\n      this.parseData();\r\n    }\r\n  }\r\n\r\n  private parseData(): void {\r\n    if (typeof this.data === 'string') {\r\n      try {\r\n        this.selectData = JSON.parse(this.data);\r\n      } catch (error) {\r\n        console.error(`Error parsing JSON data: ${error}`);\r\n      }\r\n    } else {\r\n      this.selectData = this.data;\r\n    }\r\n  }\r\n\r\n  private initializeSelect2(): void {\r\n    if (!this.testElement || !this.testElement.length) {\r\n      console.warn('Element not found');\r\n      return;\r\n    }\r\n\r\n    this.testElement.select2({\r\n      data: this.selectData,\r\n    });\r\n\r\n    this.testElement.on('select2:select', this.handleSelect);\r\n  }\r\n\r\n  private handleSelect = (event: any): void => {\r\n    const selectedValue = event.params.data.id;\r\n    this.selectedItem = selectedValue;\r\n    this.onselectchange.emit(selectedValue);\r\n  };\r\n\r\n  render() {\r\n    return <select id={this.selectId} title=\"select\" class={`select2 ${this.selectStyle}`}></select>;\r\n  }\r\n}\r\n"],"mappings":"4FAUaA,EAAQ,M,wEAOXC,KAAAC,SAAWC,IA4CXF,KAAAG,aAAgBC,IACtB,MAAMC,EAAgBD,EAAME,OAAOC,KAAKC,GACxCR,KAAKS,aAAeJ,EACpBL,KAAKU,eAAeC,KAAKN,EAAc,E,2FAlDiB,E,CAM1D,iBAAAO,GACEZ,KAAKa,W,CAGP,gBAAAC,GACEd,KAAKe,YAAcC,EAAE,IAAIhB,KAAKC,YAC9BD,KAAKiB,mB,CAIP,gBAAAC,CAAiBC,GACf,GAAIA,GAAYA,EAASC,SAAW,GAAI,CACtCpB,KAAKa,W,EAID,SAAAA,GACN,UAAWb,KAAKO,OAAS,SAAU,CACjC,IACEP,KAAKqB,WAAaC,KAAKC,MAAMvB,KAAKO,K,CAClC,MAAOiB,GACPC,QAAQD,MAAM,4BAA4BA,I,MAEvC,CACLxB,KAAKqB,WAAarB,KAAKO,I,EAInB,iBAAAU,GACN,IAAKjB,KAAKe,cAAgBf,KAAKe,YAAYW,OAAQ,CACjDD,QAAQE,KAAK,qBACb,M,CAGF3B,KAAKe,YAAYa,QAAQ,CACvBrB,KAAMP,KAAKqB,aAGbrB,KAAKe,YAAYc,GAAG,iBAAkB7B,KAAKG,a,CAS7C,MAAA2B,GACE,OAAOC,EAAA,UAAQvB,GAAIR,KAAKC,SAAU+B,MAAM,SAASC,MAAO,WAAWjC,KAAKkC,e"}