{"version":3,"names":["irCheckboxCss","IrCheckbox","componentWillLoad","this","setLabelShown","onLabelChange","label","inputId","labelShown","handleChange","event","isChecked","target","checked","oncheckchange","emit","render","h","Host","type","disabled","onChange","bind","class","checkboxStyle","id","labelStyle","htmlFor","irSelectCss","IrSelect","setSelectData","Array","from","el","attributes","forEach","attribute","name","parentAttributes","push","value","removeAttribute","componentDidLoad","selectRef","setAttribute","attributeChangedCallback","oldValue","newValue","observedAttributes","handleDataChange","_oldValue","data","trim","selectData","JSON","parse","error","console","onSelectChange","e","selectedValue","onselectchange","selectedItem","ref","title","selectTitle","map","d","optgrouplabel","options","option"],"sources":["src/components/ir-checkbox/ir-checkbox.css?tag=ir-checkbox","src/components/ir-checkbox/ir-checkbox.tsx","src/components/ir-select/ir-select.css?tag=ir-select","src/components/ir-select/ir-select.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-checkbox',\r\n  styleUrl: 'ir-checkbox.css',\r\n  shadow: false,\r\n})\r\nexport class IrCheckbox {\r\n  @Prop({ reflect: true }) label: string = '';\r\n  @Prop({ reflect: true }) inputId: string = '';\r\n  @Prop({ reflect: true }) checkboxStyle: string;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true }) labelStyle: string;\r\n  @Prop({ reflect: true }) containerStyle: string;\r\n  @Prop({ reflect: true, mutable: true }) checked: boolean;\r\n  @Event({ bubbles: true, composed: true }) oncheckchange: EventEmitter<boolean>;\r\n\r\n  @State() labelShown: boolean = false;\r\n  componentWillLoad() {\r\n    this.setLabelShown();\r\n  }\r\n  @Watch('label')\r\n  onLabelChange() {\r\n    this.setLabelShown();\r\n  }\r\n  setLabelShown() {\r\n    if (this.label !== '' && this.inputId !== '') {\r\n      this.labelShown = true;\r\n    } else {\r\n      this.labelShown = false;\r\n    }\r\n  }\r\n  handleChange(event: Event) {\r\n    const isChecked = (event.target as HTMLInputElement).checked;\r\n    this.checked = isChecked;\r\n    this.oncheckchange.emit(isChecked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input type=\"checkbox\" disabled={this.disabled} onChange={this.handleChange.bind(this)} checked={this.checked} class={this.checkboxStyle} id={this.inputId} />\r\n        {this.labelShown && (\r\n          <label class={this.labelStyle} htmlFor={this.inputId}>\r\n            {this.label}\r\n          </label>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-select',\r\n  styleUrl: 'ir-select.css',\r\n  shadow: false,\r\n})\r\nexport class IrSelect {\r\n  @Prop({ reflect: true }) data: string;\r\n  @Prop({ reflect: true }) selectName: string;\r\n  @Prop({ reflect: true }) selectStyle: string;\r\n  @Prop({ reflect: true }) selectTitle: string;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true, mutable: true }) selectedItem: string;\r\n  @State() selectData: SelectTypes[];\r\n  @Event({ bubbles: true, composed: true }) onselectchange: EventEmitter<string>;\r\n  @Element() el: HTMLElement;\r\n  selectRef: HTMLSelectElement;\r\n  @State() parentAttributes: { name: string; value: string }[] = [];\r\n\r\n  componentWillLoad() {\r\n    this.setSelectData();\r\n    Array.from(this.el.attributes).forEach(attribute => {\r\n      if (attribute.name !== 'data') {\r\n        this.parentAttributes.push({ name: attribute.name, value: attribute.value });\r\n        this.el.removeAttribute(attribute.name);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.parentAttributes.forEach(attribute => {\r\n      this.selectRef.setAttribute(attribute.name, attribute.value);\r\n    });\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    this.parentAttributes.forEach(attribute => {\r\n      if (attribute.name === name) {\r\n        if (oldValue != newValue) {\r\n          attribute.value = newValue;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['class', 'data-select2-id', 'tabindex', 'aria-hidden'];\r\n  }\r\n\r\n  @Watch('data')\r\n  handleDataChange(newValue: string, _oldValue: string) {\r\n    if (newValue !== _oldValue && newValue !== '') {\r\n      this.setSelectData();\r\n    }\r\n  }\r\n\r\n  setSelectData() {\r\n    try {\r\n      if (this.data && this.data.trim() !== '') {\r\n        this.selectData = JSON.parse(this.data) as SelectTypes[];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error parsing JSON data:', error);\r\n    }\r\n  }\r\n\r\n  onSelectChange(e: Event) {\r\n    const selectedValue = (e.target as HTMLSelectElement).value;\r\n    this.onselectchange.emit(selectedValue);\r\n    this.selectedItem = selectedValue;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <select ref={el => (this.selectRef = el)} disabled={this.disabled} onChange={this.onSelectChange.bind(this)} title={this.selectTitle}>\r\n          {this.selectData.map(d => (\r\n            <optgroup label={d.optgrouplabel}>\r\n              {d.options.map(option => (\r\n                <option value={option.value}>{option.title}</option>\r\n              ))}\r\n            </optgroup>\r\n          ))}\r\n        </select>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"gEAAA,MAAMA,EAAgB,uB,MCOTC,EAAU,M,iFACoB,G,aACE,G,oJAQZ,K,CAC/B,iBAAAC,GACEC,KAAKC,e,CAGP,aAAAC,GACEF,KAAKC,e,CAEP,aAAAA,GACE,GAAID,KAAKG,QAAU,IAAMH,KAAKI,UAAY,GAAI,CAC5CJ,KAAKK,WAAa,I,KACb,CACLL,KAAKK,WAAa,K,EAGtB,YAAAC,CAAaC,GACX,MAAMC,EAAaD,EAAME,OAA4BC,QACrDV,KAAKU,QAAUF,EACfR,KAAKW,cAAcC,KAAKJ,E,CAG1B,MAAAK,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,SAAOE,KAAK,WAAWC,SAAUjB,KAAKiB,SAAUC,SAAUlB,KAAKM,aAAaa,KAAKnB,MAAOU,QAASV,KAAKU,QAASU,MAAOpB,KAAKqB,cAAeC,GAAItB,KAAKI,UAClJJ,KAAKK,YACJS,EAAA,SAAOM,MAAOpB,KAAKuB,WAAYC,QAASxB,KAAKI,SAC1CJ,KAAKG,O,mEC5ClB,MAAMsB,EAAc,uB,MCOPC,EAAQ,M,gRAW4C,E,CAE/D,iBAAA3B,GACEC,KAAK2B,gBACLC,MAAMC,KAAK7B,KAAK8B,GAAGC,YAAYC,SAAQC,IACrC,GAAIA,EAAUC,OAAS,OAAQ,CAC7BlC,KAAKmC,iBAAiBC,KAAK,CAAEF,KAAMD,EAAUC,KAAMG,MAAOJ,EAAUI,QACpErC,KAAK8B,GAAGQ,gBAAgBL,EAAUC,K,KAKxC,gBAAAK,GACEvC,KAAKmC,iBAAiBH,SAAQC,IAC5BjC,KAAKwC,UAAUC,aAAaR,EAAUC,KAAMD,EAAUI,MAAM,G,CAIhE,wBAAAK,CAAyBR,EAAMS,EAAUC,GACvC5C,KAAKmC,iBAAiBH,SAAQC,IAC5B,GAAIA,EAAUC,OAASA,EAAM,CAC3B,GAAIS,GAAYC,EAAU,CACxBX,EAAUI,MAAQO,C,MAM1B,6BAAWC,GACT,MAAO,CAAC,QAAS,kBAAmB,WAAY,c,CAIlD,gBAAAC,CAAiBF,EAAkBG,GACjC,GAAIH,IAAaG,GAAaH,IAAa,GAAI,CAC7C5C,KAAK2B,e,EAIT,aAAAA,GACE,IACE,GAAI3B,KAAKgD,MAAQhD,KAAKgD,KAAKC,SAAW,GAAI,CACxCjD,KAAKkD,WAAaC,KAAKC,MAAMpD,KAAKgD,K,EAEpC,MAAOK,GACPC,QAAQD,MAAM,2BAA4BA,E,EAI9C,cAAAE,CAAeC,GACb,MAAMC,EAAiBD,EAAE/C,OAA6B4B,MACtDrC,KAAK0D,eAAe9C,KAAK6C,GACzBzD,KAAK2D,aAAeF,C,CAGtB,MAAA5C,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,UAAQ8C,IAAK9B,GAAO9B,KAAKwC,UAAYV,EAAKb,SAAUjB,KAAKiB,SAAUC,SAAUlB,KAAKuD,eAAepC,KAAKnB,MAAO6D,MAAO7D,KAAK8D,aACtH9D,KAAKkD,WAAWa,KAAIC,GACnBlD,EAAA,YAAUX,MAAO6D,EAAEC,eAChBD,EAAEE,QAAQH,KAAII,GACbrD,EAAA,UAAQuB,MAAO8B,EAAO9B,OAAQ8B,EAAON,a"}